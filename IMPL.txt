
internal fixture mechanics
----------------------------

fixture mechanics are contained in the python.py plugin.

pytest fixtures are stored and managed from the FixtureManager (fm) class.
Upon collection fm.parsefactories() is called multiple times to parse
fixture function definitions into FixtureDef objects.

During collection of test functions, metafunc needs to grow a "fixturenames"
list so that pytest_generate_tests() hooks can check it.   These fixturenames
are a closure of all known fixtures to be used for this function:

- ini-defined usefixtures
- autouse-marked fixtures along the collection chain up from the function
- usefixtures markers at module/class/function level
- test function funcargs

The latter list (without the closure) is also called "_initialfixtures"
and will be used during the test setup phase.

Upon the test-setup phases initialfixtures are instantiated which
will subsequently create the full fixture closure (as was computed in
metafunc.fixturenames during collection).  As fixture functions
can invoke request.getfuncargvalue() the actual closure may be even
bigger.

object model
---------------------

As part of the metafunc-protocol parents of Function nodes get a
ParentFixtures() object, containing helping/caching for 
for a function. .getfixtureinfo(func) returns a FixtureInfo with these
attributes:

- names_initial: list of initial fixture names (see above)
- names_closure: closure of all fixture names
- name2fixturedefs: for creating the value

